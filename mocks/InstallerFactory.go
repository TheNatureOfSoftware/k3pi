// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "github.com/TheNatureOfSoftware/k3pi/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// InstallerFactory is an autogenerated mock type for the InstallerFactory type
type InstallerFactory struct {
	mock.Mock
}

// MakeInstallers provides a mock function with given fields: task, resourceDir
func (_m *InstallerFactory) MakeInstallers(task interface{}, resourceDir string) model.Installers {
	ret := _m.Called(task, resourceDir)

	var r0 model.Installers
	if rf, ok := ret.Get(0).(func(interface{}, string) model.Installers); ok {
		r0 = rf(task, resourceDir)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.Installers)
		}
	}

	return r0
}

// Supports provides a mock function with given fields: task
func (_m *InstallerFactory) Supports(task interface{}) bool {
	ret := _m.Called(task)

	var r0 bool
	if rf, ok := ret.Get(0).(func(interface{}) bool); ok {
		r0 = rf(task)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
