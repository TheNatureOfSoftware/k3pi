// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	client "github.com/TheNatureOfSoftware/k3pi/pkg/client"
	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Cmd provides a mock function with given fields: cmd
func (_m *Client) Cmd(cmd string) client.Script {
	ret := _m.Called(cmd)

	var r0 client.Script
	if rf, ok := ret.Get(0).(func(string) client.Script); ok {
		r0 = rf(cmd)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(client.Script)
		}
	}

	return r0
}

// Cmdf provides a mock function with given fields: cmd, a
func (_m *Client) Cmdf(cmd string, a ...interface{}) client.Script {
	var _ca []interface{}
	_ca = append(_ca, cmd)
	_ca = append(_ca, a...)
	ret := _m.Called(_ca...)

	var r0 client.Script
	if rf, ok := ret.Get(0).(func(string, ...interface{}) client.Script); ok {
		r0 = rf(cmd, a...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(client.Script)
		}
	}

	return r0
}

// Copy provides a mock function with given fields: filename, remotePath
func (_m *Client) Copy(filename string, remotePath string) error {
	ret := _m.Called(filename, remotePath)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(filename, remotePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CopyBytes provides a mock function with given fields: b, remotePath
func (_m *Client) CopyBytes(b *[]byte, remotePath string) error {
	ret := _m.Called(b, remotePath)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]byte, string) error); ok {
		r0 = rf(b, remotePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
